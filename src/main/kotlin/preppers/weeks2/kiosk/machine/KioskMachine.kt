package preppers.weeks2.kiosk.machineimport preppers.weeks2.kiosk.console.Consoleimport preppers.weeks2.kiosk.menu.Menuimport preppers.weeks2.kiosk.order.Orderimport preppers.weeks2.kiosk.order.controller.OrderControllerimport preppers.weeks2.kiosk.product.repository.ProductRepositoryimport preppers.weeks2.kiosk.user.Userimport kotlin.system.exitProcessclass KioskMachine {    private val console = Console()    private val orderController = OrderController()    private val productRepository = ProductRepository()    fun run(user: User) {        console.showMenu()        while (true) {            var select = console.getInput()            when (select.toInt()) {                0 -> return                in 1..8 -> {                    val menu = console.showMenuBySelect(select)                    if (menu == Menu.NONE) {                        val list = orderController.getOrders()                        if (list.isNotEmpty()) {                            console.showSaveOrders(list)                            val request = console.getInput()                            if (request.toInt() == 1) {                                var totalCost = list.map { it.cost }.sum()                                if (totalCost >= user.money) {                                    println("잔액이 부족합니다.")                                    run(user)                                } else {                                    user.money -= totalCost                                    println("주문이 완료되었습니다.")                                    exitProcess(0)                                }                            } else {                                run(user)                            }                        }                    } else {                        val menuList = productRepository.getProductsByMenu(menu)                        console.showMenuDeepContent(menu, menuList)                        val selectOrder = console.getInput()                        if (selectOrder.toInt() == 0) {                            console.showMenu()                        } else {                            val order = console.selectOrder(selectOrder, menuList)?.let { Order(it) }                            orderController.order(order)                            println("저장 되었습니다.")                            run(user)                        }                    }                }            }        }    }}